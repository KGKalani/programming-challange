/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import controller.controller;

/**
 *
 * @author HP
 */
public class BoardMultiPlayer extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form board
     */
    public BoardMultiPlayer() {
        initComponents();
        this.setLocationRelativeTo(null);
        bu1.addActionListener(this);
        bu2.addActionListener(this);
        bu3.addActionListener(this);
        bu4.addActionListener(this);
        bu5.addActionListener(this);
        bu6.addActionListener(this);
        bu7.addActionListener(this);
        bu8.addActionListener(this);
        bu9.addActionListener(this);
        
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                buArray1[i][j] = 0;
                      
            }
            
        }
                buttonArray[0]=bu1;
                buttonArray[1]=bu2;
                buttonArray[2]=bu3;
                buttonArray[3]=bu4;
                buttonArray[4]=bu5;
                buttonArray[5]=bu6;
                buttonArray[6]=bu7;
                buttonArray[7]=bu8;
                buttonArray[8]=bu9;
                
                play1Score.setText("00");
                play1Score.setVisible(true);
                
                play2Score.setText("00");
                play2Score.setVisible(true);
    }

    
    JButton buttonArray[] = new JButton[9];

    String player1;
    String player2;
    BoardMultiPlayer(String play1, String play2) {
        
        
        initComponents();
        
        player1 = play1;
        player2 = play2;
        
        play1Lable.setText(play1);
        play2Lable.setText(play2);
        
        bu1.addActionListener(this);
        bu2.addActionListener(this);
        bu3.addActionListener(this);
        bu4.addActionListener(this);
        bu5.addActionListener(this);
        bu6.addActionListener(this);
        bu7.addActionListener(this);
        bu8.addActionListener(this);
        bu9.addActionListener(this);
        
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                buArray1[i][j] = 0;
                      
            }
            
        }
                buttonArray[0]=bu1;
                buttonArray[1]=bu2;
                buttonArray[2]=bu3;
                buttonArray[3]=bu4;
                buttonArray[4]=bu5;
                buttonArray[5]=bu6;
                buttonArray[6]=bu7;
                buttonArray[7]=bu8;
                buttonArray[8]=bu9;
                
                play1Score.setText("00");
                play1Score.setVisible(true);
                
                play2Score.setText("00");
                play2Score.setVisible(true);
        
    }

    public void restartGame() {
        
        count=0;
        for (int i = 0; i < 9; i++) {
            buttonArray[i].setIcon(null);
        }
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                buArray1[i][j] = 0;
                      
            }
            
        }
        changePlayer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        bu1 = new javax.swing.JButton();
        bu2 = new javax.swing.JButton();
        bu3 = new javax.swing.JButton();
        bu8 = new javax.swing.JButton();
        bu7 = new javax.swing.JButton();
        bu5 = new javax.swing.JButton();
        bu9 = new javax.swing.JButton();
        bu6 = new javax.swing.JButton();
        bu4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        exit = new javax.swing.JLabel();
        minimize = new javax.swing.JLabel();
        play2Score = new javax.swing.JLabel();
        play1Score = new javax.swing.JLabel();
        play1Lable = new javax.swing.JLabel();
        play2Lable = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bu1.setBackground(new java.awt.Color(46, 43, 43));
        bu1.setForeground(new java.awt.Color(50, 45, 45));
        bu1.setContentAreaFilled(false);
        bu1.setName("00");
        bu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bu1MousePressed(evt);
            }
        });
        bu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bu1ActionPerformed(evt);
            }
        });
        getContentPane().add(bu1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, 80, 80));

        bu2.setContentAreaFilled(false);
        bu2.setName("02");
        bu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bu2MousePressed(evt);
            }
        });
        getContentPane().add(bu2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 200, 80, 80));

        bu3.setContentAreaFilled(false);
        bu3.setName("01");
        bu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bu3MousePressed(evt);
            }
        });
        getContentPane().add(bu3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 200, 80, 80));

        bu8.setContentAreaFilled(false);
        bu8.setName("22");
        bu8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bu8MousePressed(evt);
            }
        });
        getContentPane().add(bu8, new org.netbeans.lib.awtextra.AbsoluteConstraints(283, 406, 80, 80));

        bu7.setContentAreaFilled(false);
        bu7.setName("20");
        bu7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bu7MousePressed(evt);
            }
        });
        getContentPane().add(bu7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 406, 80, 80));

        bu5.setContentAreaFilled(false);
        bu5.setName("12");
        bu5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bu5MousePressed(evt);
            }
        });
        getContentPane().add(bu5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 305, 80, 80));

        bu9.setContentAreaFilled(false);
        bu9.setName("21");
        bu9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bu9MousePressed(evt);
            }
        });
        getContentPane().add(bu9, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 406, 80, 80));

        bu6.setContentAreaFilled(false);
        bu6.setName("11");
        bu6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bu6MousePressed(evt);
            }
        });
        getContentPane().add(bu6, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 305, 80, 80));

        bu4.setContentAreaFilled(false);
        bu4.setName("10");
        bu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bu4MousePressed(evt);
            }
        });
        getContentPane().add(bu4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 305, 80, 80));

        jButton1.setBorder(null);
        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 520, 80, 30));

        jButton2.setBorder(null);
        jButton2.setContentAreaFilled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 520, 70, 30));

        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });
        getContentPane().add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 4, 18, 20));

        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
        });
        getContentPane().add(minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(374, 4, 20, 20));

        play2Score.setFont(new java.awt.Font("Agency FB", 0, 48)); // NOI18N
        play2Score.setForeground(new java.awt.Color(245, 141, 4));
        getContentPane().add(play2Score, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, 60, 40));

        play1Score.setFont(new java.awt.Font("Agency FB", 0, 48)); // NOI18N
        play1Score.setForeground(new java.awt.Color(245, 141, 4));
        getContentPane().add(play1Score, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 60, 40));

        play1Lable.setFont(new java.awt.Font("Agency FB", 0, 24)); // NOI18N
        play1Lable.setForeground(new java.awt.Color(250, 128, 13));
        getContentPane().add(play1Lable, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 80, 30));

        play2Lable.setFont(new java.awt.Font("Agency FB", 0, 24)); // NOI18N
        play2Lable.setForeground(new java.awt.Color(250, 128, 13));
        getContentPane().add(play2Lable, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 70, 80, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/boardFinaWithoutNamesl.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 420, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bu1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bu1MousePressed
        
    }//GEN-LAST:event_bu1MousePressed

    private void bu2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bu2MousePressed
        
    }//GEN-LAST:event_bu2MousePressed

    private void bu3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bu3MousePressed
        
    }//GEN-LAST:event_bu3MousePressed

    private void bu4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bu4MousePressed
        
    }//GEN-LAST:event_bu4MousePressed

    private void bu5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bu5MousePressed
        
    }//GEN-LAST:event_bu5MousePressed

    private void bu6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bu6MousePressed
        
    }//GEN-LAST:event_bu6MousePressed

    private void bu7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bu7MousePressed
        
    }//GEN-LAST:event_bu7MousePressed

    private void bu8MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bu8MousePressed
        
        
    }//GEN-LAST:event_bu8MousePressed

    private void bu9MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bu9MousePressed
        
    }//GEN-LAST:event_bu9MousePressed

    private void bu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bu1ActionPerformed

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        dispose();
    }//GEN-LAST:event_exitMouseClicked

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimizeMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        restartGame();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int score1 = 0;
        int score2 = 0;
        try {
            score1 = controller.getScore(player1);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BoardMultiPlayer.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            score2 = controller.getScore(player2);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BoardMultiPlayer.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(score1 < player1Score){
            try {
                controller.updateScore(player1, player1Score);
            } catch (    ClassNotFoundException | SQLException ex) {
                Logger.getLogger(BoardMultiPlayer.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        if(score2 < player2Score){
            try {
                controller.updateScore(player2, player2Score);
            } catch (    ClassNotFoundException | SQLException ex) {
                Logger.getLogger(BoardMultiPlayer.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        dispose();
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BoardMultiPlayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BoardMultiPlayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BoardMultiPlayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BoardMultiPlayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         * 
 
         */
        
        
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new BoardMultiPlayer().setVisible(true);
                
                
                
            }
        });
             
    }
    public int player1Score = 1;
    public int player2Score = 1;
          
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bu1;
    private javax.swing.JButton bu2;
    private javax.swing.JButton bu3;
    private javax.swing.JButton bu4;
    private javax.swing.JButton bu5;
    private javax.swing.JButton bu6;
    private javax.swing.JButton bu7;
    private javax.swing.JButton bu8;
    private javax.swing.JButton bu9;
    private javax.swing.JLabel exit;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel minimize;
    private javax.swing.JLabel play1Lable;
    private javax.swing.JLabel play1Score;
    private javax.swing.JLabel play2Lable;
    private javax.swing.JLabel play2Score;
    // End of variables declaration//GEN-END:variables
    public static int count = 0;
    public static int mainCount = 0;
    
    char buArray1[][] = new char[3][3];
    
    Draw draw;
    @Override
    public void actionPerformed(ActionEvent e) {
       
      /*if(count==8&&mainCount%2==0)
       {
           draw = new Draw(this);
           draw.setVisible(true);
           System.out.println("drawww");
       }
       else if(count == 9 && mainCount%2==1){
            draw = new Draw(this);
            draw.setVisible(true);
            System.out.println("drawww");
       }
        */   
      
            count++;
            System.out.println(count+"      "+mainCount);


            JButton bu = (JButton) e.getSource();
            String index = bu.getName();

            int x = Integer.parseInt(index.charAt(0)+"");
            int y = Integer.parseInt(index.charAt(1)+"");

            if(count%2==0){
                //bu.setBackground(Color.red); 
                if(buArray1[x][y] == 0){
                    buArray1[x][y] = 'O';
                    ImageIcon icon=new ImageIcon(getClass().getResource("/images/player2.PNG"));
                    bu.setIcon(icon); 
                    
                }
                else
                    count--;
                
                if(count==10&&mainCount%2==1)
                {
                    draw = new Draw(this);
                    draw.setVisible(true);
                    System.out.println("drawww");
                    mainCount++;
                }

            }


            else{
                //bu.setBackground(Color.BLUE);  
                if(buArray1[x][y]==0){
                    buArray1[x][y] = 'X';   
                    ImageIcon icon=new ImageIcon(getClass().getResource("/images/player1.PNG"));
                    bu.setIcon(icon); 
                }
                else
                    count--;
                
                if(count == 9 && mainCount%2==0){
                    draw = new Draw(this);
                    draw.setVisible(true);
                    System.out.println("drawww");
                    mainCount++;
                }  
            
            }
                //row check

                for (int i = 0; i < 3; i++) {

                    if(buArray1[x][i]!='O')
                        break;

                    if(i==2){
                        System.out.println("Winner Player 2");
                        mainCount++;
                        winnerDialog(2);                 
                        setScore(2,player2Score++);
                       // restartGame();

                    }
                }

                for (int i = 0; i < 3; i++) {

                    if(buArray1[x][i]!='X')
                        break;
                    if(i==2){
                        System.out.println("Winner Player 1");                 
                        winnerDialog(1);
                    // count++;
                        mainCount++;
                        setScore(1,player1Score++);
                       // restartGame();
                    }

                }

            //column check

                for (int i = 0; i < 3; i++) {

                    if(buArray1[i][y]!='O')
                        break;
                    if(i==2){
                        System.out.println("Winner Player 2");
                        winnerDialog(2);

                        //count++;
                        mainCount++;
                        setScore(2,player2Score++);
                       // restartGame();
                    }

                }

                for (int i = 0; i < 3; i++) {

                    if(buArray1[i][y]!='X')
                        break;

                    if(i==2){
                        System.out.println("Winner Player 1");
                        winnerDialog(1);
                        //count++;
                        mainCount++;
                        setScore(1,player1Score++);
                        //restartGame();
                    }


                }

            //diagonal view
            if(x==y){
                for (int i = 0; i < 3; i++) {

                    if(buArray1[i][i]!='O')
                        break;
                    if(i==2){
                        System.out.println("Winner Player 2");
                        winnerDialog(2);
                        //count++;
                        mainCount++;
                        setScore(2,player2Score++);
                       // restartGame();

                    }



                }
                for (int i = 0; i < 3; i++) {

                    if(buArray1[i][i]!='X')
                        break;
                    if(i==2){
                        System.out.println("Winner Player 1");
                        winnerDialog(1);
                        //count++;
                        mainCount++;
                        setScore(1,player1Score++);
                        //restartGame();
                    }
                }
            }
            //anti diagonal view

                for (int i = 0; i < 3; i++) {

                    if(buArray1[i][2-i]!='O')
                        break;
                    if(i==2){
                        System.out.println("Winner Player 2");
                        winnerDialog(2);
                        //count++;
                        mainCount++;
                        setScore(2,player2Score++);
                        //restartGame();

                    }

                }

                for (int i = 0; i < 3; i++) {

                    if(buArray1[i][2-i]!='X')
                        break;
                    if(i==2){
                        System.out.println("Winner Player 1");
                        winnerDialog(1);
                        //count++;
                        mainCount++;

                        setScore(1,player1Score++);
                       // restartGame();
                    }
                }
       
   }
        
    private void winnerDialog(int player) {
        
        String winner;
        player1Win win1 = new player1Win(this);
        player2Win win2 = new player2Win(this);
        if(player == 1)
            win1.setVisible(true);
        else
            win2.setVisible(true);
        
    }
    
    public void setScore(int player,int score){
        
        if(player==1){         
            play1Score.setText(String.valueOf(score));
            play1Score.setVisible(true);
        }
        else{
            play2Score.setText(String.valueOf(score));
            play2Score.setVisible(true);
        }
    } 
    public void changePlayer(){
    
        if(mainCount%2==1)
            count++;
    }
}
